"""
Simple fallback browser UI using built-in webbrowser module
"""
import webbrowser
import tkinter as tk
from tkinter import ttk, messagebox
import threading
import subprocess
import os


class SimpleBrowser:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("–õ—ë–≥–∫–∏–π –±—Ä–∞—É–∑–µ—Ä —Å VLESS VPN")
        self.root.geometry("800x600")
        self.setup_ui()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = tk.Frame(self.root, bg="#6366f1", height=60)
        header.pack(fill="x", padx=10, pady=5)
        header.pack_propagate(False)
        
        title_label = tk.Label(header, text="üåê –õ—ë–≥–∫–∏–π –±—Ä–∞—É–∑–µ—Ä —Å VLESS VPN", 
                              bg="#6366f1", fg="white", font=("Arial", 14, "bold"))
        title_label.pack(pady=15)
        
        # –ü–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_frame = tk.Frame(self.root, bg="#f8fafc", height=50)
        nav_frame.pack(fill="x", padx=10, pady=5)
        nav_frame.pack_propagate(False)
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        btn_frame = tk.Frame(nav_frame, bg="#f8fafc")
        btn_frame.pack(side="left", pady=10)
        
        tk.Button(btn_frame, text="‚Üê –ù–∞–∑–∞–¥", command=self.go_back, 
                 bg="#e5e7eb", relief="flat", padx=10).pack(side="left", padx=2)
        tk.Button(btn_frame, text="‚Üí –í–ø–µ—Ä–µ–¥", command=self.go_forward, 
                 bg="#e5e7eb", relief="flat", padx=10).pack(side="left", padx=2)
        tk.Button(btn_frame, text="‚Üª –û–±–Ω–æ–≤–∏—Ç—å", command=self.refresh, 
                 bg="#e5e7eb", relief="flat", padx=10).pack(side="left", padx=2)
        tk.Button(btn_frame, text="üè† –î–æ–º–æ–π", command=self.go_home, 
                 bg="#e5e7eb", relief="flat", padx=10).pack(side="left", padx=2)
        
        # –ê–¥—Ä–µ—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        addr_frame = tk.Frame(nav_frame, bg="#f8fafc")
        addr_frame.pack(side="left", fill="x", expand=True, padx=10, pady=10)
        
        self.address_var = tk.StringVar(value="https://www.google.com")
        self.address_entry = tk.Entry(addr_frame, textvariable=self.address_var, 
                                     font=("Arial", 11), relief="flat", bd=5)
        self.address_entry.pack(side="left", fill="x", expand=True)
        self.address_entry.bind("<Return>", lambda e: self.navigate())
        
        tk.Button(addr_frame, text="–ü–µ—Ä–µ–π—Ç–∏", command=self.navigate,
                 bg="#6366f1", fg="white", relief="flat", padx=15).pack(side="right", padx=5)
        
        # –ó–∞–∫–ª–∞–¥–∫–∏
        bookmarks_frame = tk.Frame(nav_frame, bg="#f8fafc")
        bookmarks_frame.pack(side="right", pady=10)
        
        bookmarks = [
            ("YouTube", "https://www.youtube.com"),
            ("2IP", "https://2ip.ru"),
            ("Google", "https://www.google.com")
        ]
        
        tk.Label(bookmarks_frame, text="–ó–∞–∫–ª–∞–¥–∫–∏:", bg="#f8fafc", font=("Arial", 10)).pack(side="left")
        for name, url in bookmarks:
            tk.Button(bookmarks_frame, text=name, 
                     command=lambda u=url: self.navigate_to(u),
                     bg="#e5e7eb", relief="flat", font=("Arial", 9)).pack(side="left", padx=2)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
        main_frame = tk.Frame(self.root, bg="white")
        main_frame.pack(fill="both", expand=True, padx=10, pady=5)
        
        info_text = """
üåê –õ—ë–≥–∫–∏–π –±—Ä–∞—É–∑–µ—Ä —Å VLESS VPN

‚úÖ VPN —Å—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω
üîí –ü—Ä–æ–∫—Å–∏: SOCKS5://127.0.0.1:1080
üåç –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è: –ß–µ—Ä–µ–∑ VLESS —Å–µ—Ä–≤–µ—Ä

üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:
‚Ä¢ –í–≤–µ–¥–∏—Ç–µ URL –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–ª–∞–¥–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ —Å –ø—Ä–æ–∫—Å–∏

‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
–î–ª—è –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ pywebview
        """
        
        tk.Label(main_frame, text=info_text, justify="left", 
                font=("Arial", 12), bg="white", fg="#374151").pack(pady=50)
        
        # –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        status_frame = tk.Frame(self.root, bg="#f1f5f9", height=30)
        status_frame.pack(fill="x", side="bottom")
        status_frame.pack_propagate(False)
        
        self.status_var = tk.StringVar(value="üîí VPN –∞–∫—Ç–∏–≤–µ–Ω ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ —á–µ—Ä–µ–∑ VLESS –ø—Ä–æ–∫—Å–∏ ‚Ä¢ 127.0.0.1:1080")
        tk.Label(status_frame, textvariable=self.status_var, 
                bg="#f1f5f9", fg="#64748b", font=("Arial", 10)).pack(pady=5)
                
    def navigate_to(self, url):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É URL."""
        self.address_var.set(url)
        self.navigate()
        
    def navigate(self):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É URL."""
        url = self.address_var.get().strip()
        if not url:
            return
            
        # –ï—Å–ª–∏ URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª, –¥–æ–±–∞–≤–ª—è–µ–º https://
        if not url.startswith(('http://', 'https://')):
            if '.' in url and ' ' not in url:
                url = 'https://' + url
            else:
                url = 'https://www.google.com/search?q=' + url.replace(' ', '+')
                
        self.address_var.set(url)
        
        try:
            print(f"–û—Ç–∫—Ä—ã—Ç–∏–µ URL: {url}")
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
            webbrowser.open(url)
            self.status_var.set(f"üîí –û—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: {url}")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å URL: {e}")
            
    def go_back(self):
        """–í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥."""
        self.navigate_to("https://www.google.com")
        
    def go_forward(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –≤–ø–µ—Ä–µ–¥."""
        self.navigate_to("https://www.google.com")
        
    def refresh(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ."""
        current_url = self.address_var.get()
        if current_url:
            self.navigate()
            
    def go_home(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É."""
        self.navigate_to("https://www.google.com")
        
    def run(self):
        """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        self.root.mainloop()


def start():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞."""
    print("–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ (fallback —Ä–µ–∂–∏–º)")
    browser = SimpleBrowser()
    browser.run()


if __name__ == '__main__':
    start()
