"""
Base Browser API - –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API –¥–ª—è –≤—Å–µ—Ö UI –º–æ–¥—É–ª–µ–π
Ultra-Modern Browser v4.0.0
"""

import json
import os
from urllib.parse import quote_plus
import webview
import inspect
from typing import Optional
from src.logger import browser_logger, log_exception


class BaseBrowserApi:
    """–ë–∞–∑–æ–≤—ã–π API –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤."""
    
    def __init__(self):
        self.current_window: Optional[webview.Window] = None
        self.home_url = "https://www.google.com"
        
    def set_window(self, window: webview.Window):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–∫–Ω–æ webview."""
        self.current_window = window
        browser_logger.debug(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–∫–Ω–æ webview: {window}")
        
    def _ensure_window(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–∫–Ω–∞."""
        if not self.current_window:
            browser_logger.warning("–û–∫–Ω–æ webview –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            return False
        return True
        
    def navigate(self, url: str):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ URL."""
        if not url:
            return
            
        try:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http/https, –¥–µ–ª–∞–µ–º –ø–æ–∏—Å–∫ –≤ Google
            if not url.startswith(('http://', 'https://')):
                if '.' not in url or ' ' in url:
                    # –≠—Ç–æ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                    url = f"https://www.google.com/search?q={quote_plus(url)}"
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º https://
                    url = f"https://{url}"
            
            browser_logger.info(f"–ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞: {url}")
            
            if self._ensure_window():
                self.current_window.load_url(url)
                
        except Exception as e:
            log_exception(browser_logger, e, "navigate")
    
    def go_back(self):
        """–í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥."""
        try:
            if self._ensure_window():
                # –í pywebview –Ω–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –¥–æ–º–∞—à–Ω—é—é
                browser_logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞–∑–∞–¥ (–≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é)")
                self.current_window.load_url(self.home_url)
        except Exception as e:
            log_exception(browser_logger, e, "go_back")
    
    def go_forward(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –≤–ø–µ—Ä–µ–¥."""
        try:
            if self._ensure_window():
                # –í pywebview –Ω–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                browser_logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤–ø–µ—Ä–µ–¥ (–≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é)")
                self.current_window.load_url(self.home_url)
        except Exception as e:
            log_exception(browser_logger, e, "go_forward")
    
    def refresh(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã."""
        try:
            if self._ensure_window():
                browser_logger.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
                self.current_window.reload()
        except Exception as e:
            log_exception(browser_logger, e, "refresh")
    
    def go_home(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É."""
        try:
            browser_logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
            self.navigate(self.home_url)
        except Exception as e:
            log_exception(browser_logger, e, "go_home")
    
    def focus_address_bar(self):
        """–§–æ–∫—É—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É (Ctrl+L)."""
        try:
            browser_logger.debug("–§–æ–∫—É—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É")
            # JavaScript –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –∏–∑ UI
            return True
        except Exception as e:
            log_exception(browser_logger, e, "focus_address_bar")
            return False


def create_webview_window_safe(title: str, html: str, api_instance: BaseBrowserApi, **kwargs):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ webview —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å—é."""
    try:
        browser_logger.info(f"–°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ webview: {title}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é pywebview –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        start_signature = inspect.signature(webview.start)
        supports_api_param = 'api' in start_signature.parameters
        
        browser_logger.debug(f"PyWebview –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç api –ø–∞—Ä–∞–º–µ—Ç—Ä: {supports_api_param}")
        
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ
        if supports_api_param:
            # –î–ª—è pywebview 4.0+ API –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ create_window —á–µ—Ä–µ–∑ js_api
            window = webview.create_window(title, html, js_api=api_instance, **kwargs)
        else:
            # –î–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π API –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
            window = webview.create_window(title, html, **kwargs)
        
        # –°–≤—è–∑—ã–≤–∞–µ–º API —Å –æ–∫–Ω–æ–º
        api_instance.set_window(window)
        
        return window, supports_api_param
        
    except Exception as e:
        log_exception(browser_logger, e, "create_webview_window_safe")
        raise


def start_webview_safe(api_instance: BaseBrowserApi, supports_api_param: bool = None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫ webview —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å—é."""
    try:
        if supports_api_param is None:
            start_signature = inspect.signature(webview.start)
            supports_api_param = 'api' in start_signature.parameters
        
        if supports_api_param:
            # –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è pywebview (4.0+)
            browser_logger.debug("–ó–∞–ø—É—Å–∫ —Å –Ω–æ–≤—ã–º API pywebview 4.0+")
            webview.start(api=api_instance, debug=False, http_server=True)
        else:
            # –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è pywebview (3.x)
            browser_logger.debug("–ó–∞–ø—É—Å–∫ —Å legacy API pywebview 3.x")
            webview.start(debug=False, http_server=True)
            
        browser_logger.info("‚úÖ Webview —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
    except Exception as e:
        log_exception(browser_logger, e, "start_webview_safe")
        raise


def load_bookmarks():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∑–∞–∫–ª–∞–¥–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞."""
    try:
        bookmarks_path = os.path.join('resources', 'bookmarks.json')
        if os.path.exists(bookmarks_path):
            with open(bookmarks_path, 'r', encoding='utf-8') as f:
                return json.load(f)
        else:
            # –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏
            default_bookmarks = [
                {"name": "üîç Google", "url": "https://www.google.com"},
                {"name": "üì∫ YouTube", "url": "https://www.youtube.com"},
                {"name": "üåê 2IP", "url": "https://2ip.ru"},
                {"name": "üìß Gmail", "url": "https://gmail.com"},
                {"name": "üîß GitHub", "url": "https://github.com"}
            ]
            browser_logger.info("–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏")
            return default_bookmarks
    except Exception as e:
        log_exception(browser_logger, e, "load_bookmarks")
        return []


# –û–±—â–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –≤—Å–µ—Ö UI –º–æ–¥—É–ª–µ–π
COMMON_SHORTCUTS = {
    'Ctrl+T': '–ù–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞',
    'Ctrl+W': '–ó–∞–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥–∫—É', 
    'Ctrl+R': '–û–±–Ω–æ–≤–∏—Ç—å',
    'Ctrl+L': '–§–æ–∫—É—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É',
    'Ctrl+D': '–î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–ª–∞–¥–∫–∏',
    'Ctrl+H': '–ò—Å—Ç–æ—Ä–∏—è',
    'F5': '–û–±–Ω–æ–≤–∏—Ç—å',
    'F11': '–ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω',
    'Escape': '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É'
}

COMMON_CSS_VARIABLES = """
:root {
    --primary-color: #6366f1;
    --primary-hover: #5855eb;
    --secondary-color: #f1f5f9;
    --text-color: #1e293b;
    --text-light: #64748b;
    --border-color: #e2e8f0;
    --success-color: #10b981;
    --warning-color: #f59e0b;
    --error-color: #ef4444;
    --bg-color: #ffffff;
    --bg-secondary: #f8fafc;
    --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    --border-radius: 8px;
    --font-family: 'Inter', system-ui, -apple-system, sans-serif;
}
"""
